#!/usr/bin/env php
<?php

foreach ([__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php', __DIR__ . '/vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;
        break;
    }
}

use Intervention\Image\ImageManagerStatic as Image;

use Symfony\Component\Console\ {
    Application,
    Input\InputArgument,
    Input\InputInterface,
    Output\OutputInterface,
    Style\SymfonyStyle
};

(new Application('rcutil', '1.0.1'))

/*
 |--------------------------------------------------------------------------
 | Image Command
 |--------------------------------------------------------------------------
 |
 | First, we register the image:resize command.
 |
 */
    ->register('image:resize')
        ->setDescription('Image Resizing')
        ->addArgument('input', InputArgument::REQUIRED, 'Path to the input image file')
        ->addArgument('output', InputArgument::REQUIRED, 'Path to the output image file')
        ->addArgument('width', InputArgument::REQUIRED, 'Output Image width')
        ->setCode(function(InputInterface $input, OutputInterface $output) {
            $io = new SymfonyStyle($input, $output);
            $io->section('image:resize');

            Image::configure(['driver' => 'gd']);

            $io->progressStart(3);
            $io->writeln(' Opening '.$input->getArgument('input'). ' ...');

            $inputImage = Image::make($input->getArgument('input'));

            $io->progressAdvance();
            $io->writeln(' Resizing source to '.$input->getArgument('width'). ' ...');

            $resizedImage = $inputImage->resize($input->getArgument('width'),null, function ($constraint) {
                    $constraint->aspectRatio();
            });

            $io->progressAdvance();
            $io->writeln(' Saving modified image to '.$input->getArgument('output').' ...');

            $resizedImage->save($input->getArgument('output'));
            $io->progressAdvance();
            $io->writeln(' Done!');

            $io->success('Image Saved!');
        })
    ->getApplication()
    ->run();